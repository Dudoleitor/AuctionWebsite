<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>it.carl-otto</groupId>
    <artifactId>tiw-ria</artifactId>
    <version>1.0</version>
    <name>tiw-ria</name>
    <packaging>war</packaging>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <maven.compiler.target>11</maven.compiler.target>
        <maven.compiler.source>11</maven.compiler.source>
        <junit.version>5.9.2</junit.version>
        <docker-image-tag>internal-repo.local.dudoleitor.com:5000/tiw-ria-project</docker-image-tag>
        <kubernetes-statefulset-name>tiw-ria-project</kubernetes-statefulset-name>
    </properties>

    <dependencies>
        <dependency>
            <groupId>jakarta.servlet</groupId>
            <artifactId>jakarta.servlet-api</artifactId>
            <version>5.0.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>8.0.32</version>
        </dependency>

        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-text</artifactId>
            <version>1.10.0</version>
        </dependency>

        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.10.1</version>
        </dependency>
    </dependencies>

    <build>
        <finalName>${project.artifactId}</finalName>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>3.3.2</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.22.2</version>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target</outputDirectory>
                            <resources><resource>
                                <directory>src/main/docker</directory>
                                <filtering>true</filtering>
                            </resource></resources>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>build-image</id>
                        <phase>package</phase>
                        <configuration>
                            <tasks>
                                <exec executable="docker" failonerror="true">
                                    <arg value="build"/>
                                    <arg value="-t"/>
                                    <arg value="${docker-image-tag}:${project.version}"/>
                                    <arg value="target"/>
                                </exec>
                                <exec executable="docker" failonerror="true">
                                    <arg value="tag"/>
                                    <arg value="${docker-image-tag}:${project.version}"/>
                                    <arg value="${docker-image-tag}:stable"/>
                                </exec>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals></execution>
                    <execution>
                        <id>push-and-restart</id>
                        <phase>install</phase>
                        <configuration>
                            <tasks>
                                <exec executable="docker" failonerror="true">
                                    <arg value="push"/>
                                    <arg value="${docker-image-tag}:${project.version}"/>
                                </exec>
                                <exec executable="docker" failonerror="true">
                                    <arg value="push"/>
                                    <arg value="${docker-image-tag}:stable"/>
                                </exec>
                                <exec executable="kubectl" failonerror="true">
                                    <arg value="-n"/>
                                    <arg value="default"/>
                                    <arg value="rollout"/>
                                    <arg value="restart"/>
                                    <arg value="statefulset"/>
                                    <arg value="${kubernetes-statefulset-name}"/>
                                </exec>
                            </tasks>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals></execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>